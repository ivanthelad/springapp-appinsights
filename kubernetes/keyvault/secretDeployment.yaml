apiVersion: apps/v1
kind: Deployment
metadata:
  name: springinsights
  labels:
    app: springinsights
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springinsights
  template:
    metadata:
      labels:
        app: springinsights
    spec:
      containers:
        - name: springinsights
          image: ivmckinl/springinsights:latest
          ports:
          - containerPort: 8080
          env:
          - name: POSTGRES_DB
            value: "postgres"
          - name: POSTGRES_HOST
            value: "postgres"
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: mysecret
                key: POSTGRES-USER
          - name: POSTGRES_PASS
            valueFrom:
              secretKeyRef:
                name: mysecret
                key: POSTGRES-PASS
          - name: APPLICATIONINSIGHTS_CONNECTION_STRING
            valueFrom:
              secretKeyRef:
                name: mysecret
                key: APPLICATIONINSIGHTS-CONNECTION-STRING
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-kvname"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "postgres"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: springinsights
spec:
  selector:
    app: springinsights
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
